import base64 , sys
image = open('/home/ojt/Downloads/if_nodejs-512_339733.png', 'rb')

image_read = image.read() 
image_64_encode = base64.encodestring(image_read) 
print(image_64_encode)

# image_64_decode = base64.decodestring('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')
# image_
# image_result = open('/home/kargadoorAPI/test.jpg', 'wb') # create a writable image and write the decoding result 
# image_result.write(image_64_decode) 
image_64_decode = base64.decodestring(image_64_encode)
fh = open('/home/kargadoorAPI/sx.png', "wb")
fh.write(image_64_decode)
fh.close





# print(sys.getsizeof(s))
# x = b
